name: Configure kubectl and Run kubectl via Jump Host

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region'
        required: true
      eks_cluster_name:
        description: 'EKS Cluster Name'
        required: true
      jump_host_instance_id:
        description: 'ID of the Jump Host EC2 instance'
        required: true

jobs:
  configure-and-run-kubectl:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
      # You can modify this step based on the runner's OS if not using Ubuntu

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ github.event.inputs.aws_region }}
      # Use the input value for AWS region

    - name: Authenticate with EKS cluster
      run: |
        aws eks --region ${{ github.event.inputs.aws_region }} update-kubeconfig --name ${{ github.event.inputs.eks_cluster_name }}
      # Use the input values for AWS region and EKS cluster name

    - name: Execute SSM Automation document on Jump Host
      run: |
        aws ssm create-association --name "AWS-RunShellScript" --targets "Key=instanceids,Values=${{ github.event.inputs.jump_host_instance_id }}" --automation-target-parameter-name "InstanceIds" --parameters "commands=['kubectl get pods -A', 'kubectl get services -A']" --region ${{ github.event.inputs.aws_region }}
        command_id=$(aws ssm list-commands --instance-id ${{ github.event.inputs.jump_host_instance_id }} --query 'Commands[0].CommandId' --output text --region ${{ github.event.inputs.aws_region }})
        aws ssm list-command-invocations --instance-id ${{ github.event.inputs.jump_host_instance_id }}
        aws ssm wait command-executed --instance-id ${{ github.event.inputs.jump_host_instance_id }} --command-id $command_id --region ${{ github.event.inputs.aws_region }}
    - name: Clean up SSM Automation document
      run: |
        aws ssm delete-association --name "AWS-RunShellScript" --instance-id ${{ github.event.inputs.jump_host_instance_id }} --region ${{ github.event.inputs.aws_region }}
